[package]
name = "db3"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[badges]
travis-ci = { repository = "paritytech/substrate" }
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "paritytech/substrate" }
is-it-maintained-open-issues = { repository = "paritytech/substrate" }

[[bin]]
name = "db3"
path = "bin/main.rs"
required-features = ["cli"]

[dependencies]
# third-party dependencies
clap = { version = "3.1.18", features = ["derive"], optional = true }
codec = { package = "parity-scale-codec", version = "3.0.0" }
serde = { version = "1.0.136", features = ["derive"] }
jsonrpsee = { version = "0.14.0", features = ["server"] }
futures = "0.3.21"
hex-literal = "0.3.4"
log = "0.4.17"
rand = "0.8"

# primitives
sp-authority-discovery = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/authority-discovery" }
sp-consensus-babe = { version = "0.10.0-dev", path = "../../thirdparty/substrate/primitives/consensus/babe" }
grandpa-primitives = { version = "4.0.0-dev", package = "sp-finality-grandpa", path = "../../thirdparty/substrate/primitives/finality-grandpa" }
sp-api = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/api" }
sp-core = { version = "6.0.0", path = "../../thirdparty/substrate/primitives/core" }
sp-runtime = { version = "6.0.0", path = "../../thirdparty/substrate/primitives/runtime" }
sp-timestamp = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/timestamp" }
sp-authorship = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/authorship" }
sp-inherents = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/inherents" }
sp-keyring = { version = "6.0.0", path = "../../thirdparty/substrate/primitives/keyring" }
sp-keystore = { version = "0.12.0", path = "../../thirdparty/substrate/primitives/keystore" }
sp-consensus = { version = "0.10.0-dev", path = "../../thirdparty/substrate/primitives/consensus/common" }
sp-transaction-pool = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/transaction-pool" }
sp-transaction-storage-proof = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/transaction-storage-proof" }

# client dependencies
sc-client-api = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/api" }
sc-chain-spec = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/chain-spec" }
sc-consensus = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/common" }
sc-transaction-pool = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/transaction-pool" }
sc-transaction-pool-api = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/transaction-pool/api" }
sc-network = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/network" }
sc-consensus-slots = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/slots" }
sc-consensus-babe = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/babe" }
sc-consensus-uncles = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/uncles" }
grandpa = { version = "0.10.0-dev", package = "sc-finality-grandpa", path = "../../thirdparty/substrate/client/finality-grandpa" }
sc-rpc = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/rpc" }
sc-basic-authorship = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/basic-authorship" }
sc-service = { version = "0.10.0-dev", default-features = false, path = "../../thirdparty/substrate/client/service" }
sc-telemetry = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/telemetry" }
sc-executor = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/executor" }
sc-authority-discovery = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/authority-discovery" }
sc-sync-state-rpc = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/sync-state-rpc" }
sc-sysinfo = { version = "6.0.0-dev", path = "../../thirdparty/substrate/client/sysinfo" }

# frame dependencies
frame-system = { version = "4.0.0-dev", path = "../../thirdparty/substrate/frame/system" }
frame-system-rpc-runtime-api = { version = "4.0.0-dev", path = "../../thirdparty/substrate/frame/system/rpc/runtime-api" }
pallet-transaction-payment = { version = "4.0.0-dev", path = "../../thirdparty/substrate/frame/transaction-payment" }
pallet-asset-tx-payment = { version = "4.0.0-dev", path = "../../thirdparty/substrate/frame/transaction-payment/asset-tx-payment/" }
pallet-im-online = { version = "4.0.0-dev", default-features = false, path = "../../thirdparty/substrate/frame/im-online" }
pallet-sql-db = { version = "0.1.0", default-features = false, path = "../../frame/db" }
# node-specific dependencies
db3-runtime = { version = "0.1.0", path = "../../runtime" }
db3-rpc = { version = "0.1.0", path = "../../rpc" }
db3-primitives = { version = "0.1.0", path = "../../primitives" }
db3-executor = { version = "0.1.0", path = "../executor" }

# CLI-specific dependencies
sc-cli = { version = "0.10.0-dev", optional = true, path = "../../thirdparty/substrate/client/cli" }
frame-benchmarking-cli = { version = "4.0.0-dev", optional = true, path = "../../thirdparty/substrate/utils/frame/benchmarking-cli" }
db3-inspect = { version = "0.1.0", optional = true, path = "../inspect" }
try-runtime-cli = { version = "0.10.0-dev", optional = true, path = "../../thirdparty/substrate/utils/frame/try-runtime/cli" }
serde_json = "1.0.79"

[target.'cfg(any(target_arch="x86_64", target_arch="aarch64"))'.dependencies]
db3-executor = { version = "0.1.0", path = "../executor", features = ["wasmtime"] }
sc-cli = { version = "0.10.0-dev", optional = true, path = "../../thirdparty/substrate/client/cli", features = ["wasmtime"] }
sc-service = { version = "0.10.0-dev", default-features = false, path = "../../thirdparty/substrate/client/service", features = [
	"wasmtime",
] }
sp-trie = { version = "6.0.0", default-features = false, path = "../../thirdparty/substrate/primitives/trie", features = [
	"memory-tracker",
] }

[dev-dependencies]
sc-keystore = { version = "4.0.0-dev", path = "../../thirdparty/substrate/client/keystore" }
sc-client-db = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/db" }
sc-consensus = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/common" }
sc-consensus-babe = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/babe" }
sc-consensus-epochs = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/consensus/epochs" }
sc-service-test = { version = "2.0.0", path = "../../thirdparty/substrate/client/service/test" }
sc-block-builder = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/block-builder" }
sp-tracing = { version = "5.0.0", path = "../../thirdparty/substrate/primitives/tracing" }
sp-blockchain = { version = "4.0.0-dev", path = "../../thirdparty/substrate/primitives/blockchain" }
futures = "0.3.21"
tempfile = "3.1.0"
assert_cmd = "2.0.2"
nix = "0.23"
serde_json = "1.0"
regex = "1.5.5"
platforms = "2.0"
async-std = { version = "1.11.0", features = ["attributes"] }
soketto = "0.7.1"
criterion = { version = "0.3.5", features = ["async_tokio"] }
tokio = { version = "1.17.0", features = ["macros", "time", "parking_lot"] }
wait-timeout = "0.2"
remote-externalities = { path = "../../thirdparty/substrate/utils/frame/remote-externalities" }
pallet-timestamp = { version = "4.0.0-dev", path = "../../thirdparty/substrate/frame/timestamp" }

[build-dependencies]
clap = { version = "3.1.18", optional = true }
clap_complete = { version = "3.0", optional = true }
db3-inspect = { version = "0.1.0", optional = true, path = "../inspect" }
frame-benchmarking-cli = { version = "4.0.0-dev", optional = true, path = "../../thirdparty/substrate/utils/frame/benchmarking-cli" }
substrate-build-script-utils = { version = "3.0.0", optional = true, path = "../../thirdparty/substrate/utils/build-script-utils" }
substrate-frame-cli = { version = "4.0.0-dev", optional = true, path = "../../thirdparty/substrate/utils/frame/frame-utilities-cli" }
try-runtime-cli = { version = "0.10.0-dev", optional = true, path = "../../thirdparty/substrate/utils/frame/try-runtime/cli" }
sc-cli = { version = "0.10.0-dev", path = "../../thirdparty/substrate/client/cli", optional = true }
pallet-balances = { version = "4.0.0-dev", path = "../../thirdparty/substrate/frame/balances" }

[features]
default = ["cli"]
cli = [
	"db3-executor/wasmi-errno",
	"db3-inspect",
	"sc-cli",
	"frame-benchmarking-cli",
	"substrate-frame-cli",
	"sc-service/rocksdb",
	"clap",
	"clap_complete",
	"substrate-build-script-utils",
	"try-runtime-cli",
]

