name: CI # Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  coverage:
    name: test
    runs-on: ubuntu-latest
    #runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest
      - name: Setup Build env
        run: |
          ROOT_DIR=`pwd`
          sudo apt-get install protobuf-compiler -y
          yarn global add arlocal_db3
          cd ${ROOT_DIR}/metadata && yarn install
          cd ${ROOT_DIR}/metadata && npx hardhat test
          test -e ${ROOT_DIR}/metadata/artifacts/contracts/DB3MetaStore.sol/DB3MetaStore.json && cp -f ${ROOT_DIR}/metadata/artifacts/contracts/DB3MetaStore.sol/DB3MetaStore.json ${ROOT_DIR}/abi/
          cd ${ROOT_DIR} && cargo build
          cd ${ROOT_DIR}/tools && bash start_localnet.sh
          sleep 2
          export RUST_BACKTRACE=1
          cargo test test_test_data_rollup_node_setup
          cargo test register_no1_data_network
      - name: Run rust test with coverage
        run: |
          export RUST_BACKTRACE=1
          #cargo llvm-cov nextest --workspace --exclude merkdb  --lcov --output-path lcov.info --no-fail-fast
          cargo nextest run
      - name: Run Typescript sdk test
        run: |
          ROOT_DIR=`pwd`
          cd $ROOT_DIR/sdk && yarn && make
          cd $ROOT_DIR/sdk && yarn test --coverage
      - name: Rust Java sdk test
        run: |
          ROOT_DIR=`pwd`
          cd ${ROOT_DIR}/java && mvn test
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: db3-log-artifact
          path: |
            tools/*.log
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.COV_TOKEN}}
          directory: .
          flags: rust
