name: CI # Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, cargo > 1.64.0
      - uses: Swatinem/rust-cache@v1
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - name: Check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --document-private-items --all-features --workspace --examples

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt,llvm-tools-preview
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest
      - name: Setup etcd3
        run: |
          wget https://github.com/etcd-io/etcd/releases/download/v3.5.4/etcd-v3.5.4-linux-amd64.tar.gz
          tar -zxf etcd-v3.5.4-linux-amd64.tar.gz
          cd etcd-v3.5.4-linux-amd64
          ./etcd &
      - name: Setup s3 mock environment
        run: |
          mkdir -p /tmp/data
          docker run \
          --detach \
          --rm \
          --publish 9000:9000 \
          --publish 9001:9001 \
          --volume "/tmp/data:/data" \
          --env "MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE" \
          --env "MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" \
          quay.io/minio/minio server /data \
          --console-address ":9001"
      - name: Run rust test with coverage
        run: |
          export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
          export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          cargo llvm-cov nextest --lcov --output-path lcov.info --no-fail-fast
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.COV_TOKEN}}
          directory: .
          flags: rust
