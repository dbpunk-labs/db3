name: CD
on:
    push:
        tags:
            - "[v]?[0-9]+.[0-9]+.[0-9]+"
jobs:
    publish:
        name: Publishing for ${{ matrix.job.os }}
        runs-on: ${{ matrix.job.os }}
        strategy:
            matrix:
                rust: [nightly]
                job:
                    - os: macos-latest
                      os-name: macos
                      target: x86_64-apple-darwin
                      architecture: x86_64
                      binary-postfix: ""
                      use-cross: false
                    - os: ubuntu-latest
                      os-name: linux
                      target: x86_64-unknown-linux-gnu
                      architecture: x86_64
                      binary-postfix: ""
                      use-cross: false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  submodules: recursive
            - name: Install Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust }}
                  profile: minimal
                  override: true
            - uses: Swatinem/rust-cache@v2
            - name: Setup test env
              run: |
                  if [[ ${{ matrix.job.target }} == x86_64-unknown-linux-gnu ]]; then
                    sudo apt-get install protobuf-compiler
                  fi
                  if [[ ${{ matrix.job.target }} == x86_64-apple-darwin ]]; then
                    brew install protobuf
                  fi
            - name: Cargo build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  use-cross: ${{ matrix.job.use-cross }}
                  toolchain: ${{ matrix.rust }}
                  args: --release --target ${{ matrix.job.target }}
            - name: Packaging final binary
              shell: bash
              run: |
                  cd target/${{ matrix.job.target }}/release
                  if [[ ${{ matrix.job.target }} == x86_64-unknown-linux-gnu ]]; then
                    wget https://github.com/tendermint/tendermint/releases/download/v0.34.22/tendermint_0.34.22_linux_amd64.tar.gz
                    mv tendermint_0.34.22_linux_amd64.tar.gz tendermint.tar.gz
                    tar -zxf tendermint.tar.gz
                  fi
                  if [[ ${{ matrix.job.target }} == x86_64-apple-darwin ]]; then
                    wget https://github.com/tendermint/tendermint/releases/download/v0.34.22/tendermint_0.34.22_darwin_amd64.tar.gz
                    mv tendermint_0.34.22_darwin_amd64.tar.gz tendermint.tar.gz
                    tar -zxf tendermint.tar.gz
                  fi
                  RELEASE_NAME=db3-${GITHUB_REF/refs\/tags\//}-${{ matrix.job.os-name }}-${{ matrix.job.architecture }}
                  mkdir -p $RELEASE_NAME/bin
                  mkdir -p $RELEASE_NAME/tm
                  DB3_BINARY_NAME=db3
                  TM_BINARY_NAME=tendermint
                  ./tendermint init --home $RELEASE_NAME/tm/
                  mv $DB3_BINARY_NAME $TM_BINARY_NAME $RELEASE_NAME/bin/
                  tar czvf $RELEASE_NAME.tar.gz $RELEASE_NAME
                  ########## create sha256 ##########
                  if [[ ${{ runner.os }} == 'Windows' ]]; then
                    certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
                  else
                    shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
                  fi
            - name: Releasing assets
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      target/${{ matrix.job.target }}/release/db3*.tar.gz
                      target/${{ matrix.job.target }}/release/db3*.sha256
              env:
                  GITHUB_TOKEN: ${{ secrets.CR_PAT }}
    npm_publish:
        name: Publish Package to npmjs
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3.5.1
              with:
                  node-version: "16.x"
                  # registry-url: "https://registry.npmmirror.com/"
                  path: ./src/db3js
            - uses: CultureHQ/actions-yarn@v1.0.1
            - run: |
                cd src/db3js
                yarn install
                make
                yarn build
            - uses: JS-DevTools/npm-publish@v1
              with:
                  token: ${{ secrets.NMP_TOKEN }}
                  package: src/db3js/package.json

