//
//
// db3_node.proto
// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
syntax = "proto3";
import "db3_bill.proto";
import "db3_mutation.proto";
import "db3_account.proto";
package db3_node_proto;

message QueryBillRequest {
    uint64 height = 1;
    uint64 start_id = 2;
    uint64 end_id = 3;
}

message QueryBillResponse {
    repeated db3_bill_proto.Bill bills = 1;
}

message Range {
    bytes start = 1;
    bytes end = 2;
}

message BatchRangeKey {
    bytes ns = 1;
    repeated Range range = 2;
    int32 session = 3;
}

message BatchGetKey {
    bytes ns = 1;
    repeated bytes keys = 2;
    int32 session = 3;
}

message BatchGetValue {
    repeated db3_mutation_proto.KVPair values = 1;
    int32 session = 2;
    bytes ns = 3;
}

message GetKeyRequest {
    bytes batch_get = 1;
    bytes signature = 2;
}

message GetKeyResponse {
    // TODO the validator sign
    bytes signature = 1;
    BatchGetValue batch_get_values = 2;
}

message GetAccountRequest {
    // the hex encoded string
    string addr = 1;
}


service StorageNode {
    // method for querying bills by height
    rpc QueryBill(QueryBillRequest) returns (QueryBillResponse) {}
    // method for querying kv data
    rpc GetKey(GetKeyRequest) returns (GetKeyResponse) {}
    // method for querying account
    rpc GetAccount(GetAccountRequest) returns (db3_account_proto.Account) {}
}
