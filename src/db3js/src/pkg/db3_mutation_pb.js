// source: db3_mutation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import * as jspb from "google-protobuf";
import db3_base_pb from "./db3_base_pb.js";
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.object.extend(proto, db3_base_pb);
goog.exportSymbol('proto.db3_mutation_proto.KVPair', null, global);
goog.exportSymbol('proto.db3_mutation_proto.Mutation', null, global);
goog.exportSymbol('proto.db3_mutation_proto.MutationAction', null, global);
goog.exportSymbol('proto.db3_mutation_proto.WriteRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.db3_mutation_proto.KVPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.db3_mutation_proto.KVPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.db3_mutation_proto.KVPair.displayName = 'proto.db3_mutation_proto.KVPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.db3_mutation_proto.Mutation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.db3_mutation_proto.Mutation.repeatedFields_, null);
};
goog.inherits(proto.db3_mutation_proto.Mutation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.db3_mutation_proto.Mutation.displayName = 'proto.db3_mutation_proto.Mutation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.db3_mutation_proto.WriteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.db3_mutation_proto.WriteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.db3_mutation_proto.WriteRequest.displayName = 'proto.db3_mutation_proto.WriteRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.db3_mutation_proto.KVPair.prototype.toObject = function(opt_includeInstance) {
  return proto.db3_mutation_proto.KVPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.db3_mutation_proto.KVPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.db3_mutation_proto.KVPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: msg.getKey_asB64(),
    value: msg.getValue_asB64(),
    action: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.db3_mutation_proto.KVPair}
 */
proto.db3_mutation_proto.KVPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.db3_mutation_proto.KVPair;
  return proto.db3_mutation_proto.KVPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.db3_mutation_proto.KVPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.db3_mutation_proto.KVPair}
 */
proto.db3_mutation_proto.KVPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!proto.db3_mutation_proto.MutationAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.KVPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.db3_mutation_proto.KVPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.db3_mutation_proto.KVPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.db3_mutation_proto.KVPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional bytes key = 1;
 * @return {string}
 */
proto.db3_mutation_proto.KVPair.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key = 1;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.db3_mutation_proto.KVPair.prototype.getKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKey()));
};


/**
 * optional bytes key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.KVPair.prototype.getKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.db3_mutation_proto.KVPair} returns this
 */
proto.db3_mutation_proto.KVPair.prototype.setKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes value = 2;
 * @return {string}
 */
proto.db3_mutation_proto.KVPair.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.db3_mutation_proto.KVPair.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.KVPair.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.db3_mutation_proto.KVPair} returns this
 */
proto.db3_mutation_proto.KVPair.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional MutationAction action = 3;
 * @return {!proto.db3_mutation_proto.MutationAction}
 */
proto.db3_mutation_proto.KVPair.prototype.getAction = function() {
  return /** @type {!proto.db3_mutation_proto.MutationAction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.db3_mutation_proto.MutationAction} value
 * @return {!proto.db3_mutation_proto.KVPair} returns this
 */
proto.db3_mutation_proto.KVPair.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.db3_mutation_proto.Mutation.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.db3_mutation_proto.Mutation.prototype.toObject = function(opt_includeInstance) {
  return proto.db3_mutation_proto.Mutation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.db3_mutation_proto.Mutation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.db3_mutation_proto.Mutation.toObject = function(includeInstance, msg) {
  var f, obj = {
    ns: msg.getNs_asB64(),
    kvPairsList: jspb.Message.toObjectList(msg.getKvPairsList(),
    proto.db3_mutation_proto.KVPair.toObject, includeInstance),
    nonce: jspb.Message.getFieldWithDefault(msg, 3, 0),
    chainId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    chainRole: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gasPrice: (f = msg.getGasPrice()) && db3_base_pb.Units.toObject(includeInstance, f),
    gas: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.db3_mutation_proto.Mutation}
 */
proto.db3_mutation_proto.Mutation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.db3_mutation_proto.Mutation;
  return proto.db3_mutation_proto.Mutation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.db3_mutation_proto.Mutation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.db3_mutation_proto.Mutation}
 */
proto.db3_mutation_proto.Mutation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNs(value);
      break;
    case 2:
      var value = new proto.db3_mutation_proto.KVPair;
      reader.readMessage(value,proto.db3_mutation_proto.KVPair.deserializeBinaryFromReader);
      msg.addKvPairs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    case 4:
      var value = /** @type {!proto.db3_base_proto.ChainId} */ (reader.readEnum());
      msg.setChainId(value);
      break;
    case 5:
      var value = /** @type {!proto.db3_base_proto.ChainRole} */ (reader.readEnum());
      msg.setChainRole(value);
      break;
    case 6:
      var value = new db3_base_pb.Units;
      reader.readMessage(value,db3_base_pb.Units.deserializeBinaryFromReader);
      msg.setGasPrice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.Mutation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.db3_mutation_proto.Mutation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.db3_mutation_proto.Mutation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.db3_mutation_proto.Mutation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNs_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getKvPairsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.db3_mutation_proto.KVPair.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getChainRole();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getGasPrice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      db3_base_pb.Units.serializeBinaryToWriter
    );
  }
  f = message.getGas();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional bytes ns = 1;
 * @return {string}
 */
proto.db3_mutation_proto.Mutation.prototype.getNs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes ns = 1;
 * This is a type-conversion wrapper around `getNs()`
 * @return {string}
 */
proto.db3_mutation_proto.Mutation.prototype.getNs_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNs()));
};


/**
 * optional bytes ns = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNs()`
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.Mutation.prototype.getNs_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNs()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.setNs = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated KVPair kv_pairs = 2;
 * @return {!Array<!proto.db3_mutation_proto.KVPair>}
 */
proto.db3_mutation_proto.Mutation.prototype.getKvPairsList = function() {
  return /** @type{!Array<!proto.db3_mutation_proto.KVPair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.db3_mutation_proto.KVPair, 2));
};


/**
 * @param {!Array<!proto.db3_mutation_proto.KVPair>} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
*/
proto.db3_mutation_proto.Mutation.prototype.setKvPairsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.db3_mutation_proto.KVPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.db3_mutation_proto.KVPair}
 */
proto.db3_mutation_proto.Mutation.prototype.addKvPairs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.db3_mutation_proto.KVPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.clearKvPairsList = function() {
  return this.setKvPairsList([]);
};


/**
 * optional uint64 nonce = 3;
 * @return {number}
 */
proto.db3_mutation_proto.Mutation.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional db3_base_proto.ChainId chain_id = 4;
 * @return {!proto.db3_base_proto.ChainId}
 */
proto.db3_mutation_proto.Mutation.prototype.getChainId = function() {
  return /** @type {!proto.db3_base_proto.ChainId} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.db3_base_proto.ChainId} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.setChainId = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional db3_base_proto.ChainRole chain_role = 5;
 * @return {!proto.db3_base_proto.ChainRole}
 */
proto.db3_mutation_proto.Mutation.prototype.getChainRole = function() {
  return /** @type {!proto.db3_base_proto.ChainRole} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.db3_base_proto.ChainRole} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.setChainRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional db3_base_proto.Units gas_price = 6;
 * @return {?proto.db3_base_proto.Units}
 */
proto.db3_mutation_proto.Mutation.prototype.getGasPrice = function() {
  return /** @type{?proto.db3_base_proto.Units} */ (
    jspb.Message.getWrapperField(this, db3_base_pb.Units, 6));
};


/**
 * @param {?proto.db3_base_proto.Units|undefined} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
*/
proto.db3_mutation_proto.Mutation.prototype.setGasPrice = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.clearGasPrice = function() {
  return this.setGasPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.db3_mutation_proto.Mutation.prototype.hasGasPrice = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 gas = 7;
 * @return {number}
 */
proto.db3_mutation_proto.Mutation.prototype.getGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.db3_mutation_proto.Mutation} returns this
 */
proto.db3_mutation_proto.Mutation.prototype.setGas = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.db3_mutation_proto.WriteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.db3_mutation_proto.WriteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.db3_mutation_proto.WriteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.db3_mutation_proto.WriteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    signature: msg.getSignature_asB64(),
    mutation: msg.getMutation_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.db3_mutation_proto.WriteRequest}
 */
proto.db3_mutation_proto.WriteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.db3_mutation_proto.WriteRequest;
  return proto.db3_mutation_proto.WriteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.db3_mutation_proto.WriteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.db3_mutation_proto.WriteRequest}
 */
proto.db3_mutation_proto.WriteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMutation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.WriteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.db3_mutation_proto.WriteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.db3_mutation_proto.WriteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.db3_mutation_proto.WriteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMutation_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes signature = 1;
 * @return {string}
 */
proto.db3_mutation_proto.WriteRequest.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes signature = 1;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.db3_mutation_proto.WriteRequest.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.WriteRequest.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.db3_mutation_proto.WriteRequest} returns this
 */
proto.db3_mutation_proto.WriteRequest.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes mutation = 2;
 * @return {string}
 */
proto.db3_mutation_proto.WriteRequest.prototype.getMutation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes mutation = 2;
 * This is a type-conversion wrapper around `getMutation()`
 * @return {string}
 */
proto.db3_mutation_proto.WriteRequest.prototype.getMutation_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMutation()));
};


/**
 * optional bytes mutation = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMutation()`
 * @return {!Uint8Array}
 */
proto.db3_mutation_proto.WriteRequest.prototype.getMutation_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMutation()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.db3_mutation_proto.WriteRequest} returns this
 */
proto.db3_mutation_proto.WriteRequest.prototype.setMutation = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.db3_mutation_proto.MutationAction = {
  INSERTKV: 0,
  DELETEKV: 1,
  NONCE: 2
};

export default proto.db3_mutation_proto;
