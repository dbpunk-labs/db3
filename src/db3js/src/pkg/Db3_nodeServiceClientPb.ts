/**
 * @fileoverview gRPC-Web generated client stub for db3_node_proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: db3_node.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import db3_account_pb from "./db3_account_pb";
import db3_node_pb from "./db3_node_pb";

export class StorageNodeClient {
	client_: grpcWeb.AbstractClientBase;
	hostname_: string;
	credentials_: null | { [index: string]: string };
	options_: null | { [index: string]: any };

	constructor(
		hostname: string,
		credentials?: null | { [index: string]: string },
		options?: null | { [index: string]: any },
	) {
		if (!options) options = {};
		if (!credentials) credentials = {};
		options["format"] = "text";

		this.client_ = new grpcWeb.GrpcWebClientBase(options);
		this.hostname_ = hostname.replace(/\/+$/, "");
		this.credentials_ = credentials;
		this.options_ = options;
	}

	methodDescriptorQueryBill = new grpcWeb.MethodDescriptor(
		"/db3_node_proto.StorageNode/QueryBill",
		grpcWeb.MethodType.UNARY,
		db3_node_pb.QueryBillRequest,
		db3_node_pb.QueryBillResponse,
		(request: db3_node_pb.QueryBillRequest) => {
			return request.serializeBinary();
		},
		db3_node_pb.QueryBillResponse.deserializeBinary,
	);

	queryBill(
		request: db3_node_pb.QueryBillRequest,
		metadata: grpcWeb.Metadata | null,
	): Promise<db3_node_pb.QueryBillResponse>;

	queryBill(
		request: db3_node_pb.QueryBillRequest,
		metadata: grpcWeb.Metadata | null,
		callback: (
			err: grpcWeb.RpcError,
			response: db3_node_pb.QueryBillResponse,
		) => void,
	): grpcWeb.ClientReadableStream<db3_node_pb.QueryBillResponse>;

	queryBill(
		request: db3_node_pb.QueryBillRequest,
		metadata: grpcWeb.Metadata | null,
		callback?: (
			err: grpcWeb.RpcError,
			response: db3_node_pb.QueryBillResponse,
		) => void,
	) {
		if (callback !== undefined) {
			return this.client_.rpcCall(
				this.hostname_ + "/db3_node_proto.StorageNode/QueryBill",
				request,
				metadata || {},
				this.methodDescriptorQueryBill,
				callback,
			);
		}
		return this.client_.unaryCall(
			this.hostname_ + "/db3_node_proto.StorageNode/QueryBill",
			request,
			metadata || {},
			this.methodDescriptorQueryBill,
		);
	}

	methodDescriptorGetKey = new grpcWeb.MethodDescriptor(
		"/db3_node_proto.StorageNode/GetKey",
		grpcWeb.MethodType.UNARY,
		db3_node_pb.GetKeyRequest,
		db3_node_pb.GetKeyResponse,
		(request: db3_node_pb.GetKeyRequest) => {
			return request.serializeBinary();
		},
		db3_node_pb.GetKeyResponse.deserializeBinary,
	);

	getKey(
		request: db3_node_pb.GetKeyRequest,
		metadata: grpcWeb.Metadata | null,
	): Promise<db3_node_pb.GetKeyResponse>;

	getKey(
		request: db3_node_pb.GetKeyRequest,
		metadata: grpcWeb.Metadata | null,
		callback: (
			err: grpcWeb.RpcError,
			response: db3_node_pb.GetKeyResponse,
		) => void,
	): grpcWeb.ClientReadableStream<db3_node_pb.GetKeyResponse>;

	getKey(
		request: db3_node_pb.GetKeyRequest,
		metadata: grpcWeb.Metadata | null,
		callback?: (
			err: grpcWeb.RpcError,
			response: db3_node_pb.GetKeyResponse,
		) => void,
	) {
		if (callback !== undefined) {
			return this.client_.rpcCall(
				this.hostname_ + "/db3_node_proto.StorageNode/GetKey",
				request,
				metadata || {},
				this.methodDescriptorGetKey,
				callback,
			);
		}
		return this.client_.unaryCall(
			this.hostname_ + "/db3_node_proto.StorageNode/GetKey",
			request,
			metadata || {},
			this.methodDescriptorGetKey,
		);
	}

	methodDescriptorGetAccount = new grpcWeb.MethodDescriptor(
		"/db3_node_proto.StorageNode/GetAccount",
		grpcWeb.MethodType.UNARY,
		db3_node_pb.GetAccountRequest,
		db3_account_pb.Account,
		(request: db3_node_pb.GetAccountRequest) => {
			return request.serializeBinary();
		},
		db3_account_pb.Account.deserializeBinary,
	);

	getAccount(
		request: db3_node_pb.GetAccountRequest,
		metadata: grpcWeb.Metadata | null,
	): Promise<db3_account_pb.Account>;

	getAccount(
		request: db3_node_pb.GetAccountRequest,
		metadata: grpcWeb.Metadata | null,
		callback: (
			err: grpcWeb.RpcError,
			response: db3_account_pb.Account,
		) => void,
	): grpcWeb.ClientReadableStream<db3_account_pb.Account>;

	getAccount(
		request: db3_node_pb.GetAccountRequest,
		metadata: grpcWeb.Metadata | null,
		callback?: (
			err: grpcWeb.RpcError,
			response: db3_account_pb.Account,
		) => void,
	) {
		if (callback !== undefined) {
			return this.client_.rpcCall(
				this.hostname_ + "/db3_node_proto.StorageNode/GetAccount",
				request,
				metadata || {},
				this.methodDescriptorGetAccount,
				callback,
			);
		}
		return this.client_.unaryCall(
			this.hostname_ + "/db3_node_proto.StorageNode/GetAccount",
			request,
			metadata || {},
			this.methodDescriptorGetAccount,
		);
	}
}
